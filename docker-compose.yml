version: "3.9"

networks:
  notes:
    driver: bridge

services:
  database:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${db_user}
      - POSTGRES_PASSWORD=${db_password}
      - POSTGRES_DB=NotesDb
    networks:
      - notes

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.1
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    networks:
      - notes

  kibana:
    image: docker.elastic.co/kibana/kibana:7.16.1
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - notes

  redis:
    image: redis:7.0.5
    restart: always
    ports:
      - '6379:6379'
    volumes: 
      - cache:/data
    networks:
      - notes

  notes-api:
    build: src/
    restart: always
    depends_on:
      - database
      - kibana
      - redis
    environment:
      - ASPNETCORE_ENVIRONMENT=docker
      - NotesConfiguration__Database__ConnectionString=Host=database;Port=5432;Database=NotesApi;User Id=${db_user};Password=${db_password};
      - NotesConfiguration__JwtSettings__Secret=${jwt_secret}"
    ports:
      - "2100:80"
    networks:
      - notes

volumes:
  pgdata:
    driver: local
  elasticsearch-data:
    driver: local
  cache:
    driver: local