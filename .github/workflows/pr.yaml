name: 'Pull Request'

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  codeCoverage:
    name: Code Coverage on Pull Request
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build Notes.sln --configuration Release --no-restore
      - name: Test
        run: dotnet test Notes.sln --configuration Release --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage
      - name: ReportGenerator
        uses: danielpalme/ReportGenerator-GitHub-Action@5.1.10
        with:
          reports: 'coverage/**/coverage.cobertura.xml'
          targetdir: 'coverageResult'
          reporttypes: 'Cobertura'
          filefilters: '-*_Add*.cs;-*DataContextModelSnapshot.cs;'
          verbosity: 'Info'
          tag: '${{ github.run_number }}_${{ github.run_id }}'
          toolpath: 'reportgeneratortool'
      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v2.2.3
        with:
          name: CoverageReport       
          path: coverageResult
      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverageResult/Cobertura.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '60 80'
      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md
